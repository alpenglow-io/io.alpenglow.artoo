package oak.func.fun;

import Functional;

import static java.util.Objects.requireNonNull;

@FunctionalInterface
public interface Function#ordinal<#types, R> extends Functional.Fun {
  R apply(#params);

  default <V> Function#ordinal<#types, V> then(Function1<? super R, ? extends V> after) {
    requireNonNull(after);
    return (#vars) -> after.apply(apply(#vars));
  }
}
